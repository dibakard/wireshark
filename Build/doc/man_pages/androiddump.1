'\" t
.\"     Title: androiddump
.\"    Author: [see the "AUTHOR(S)" section]
.\" Generator: Asciidoctor 2.0.16
.\"      Date: 2025-04-11
.\"    Manual: \ \&
.\"    Source: \ \&
.\"  Language: English
.\"
.TH "ANDROIDDUMP" "1" "2025-04-11" "\ \&" "\ \&"
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.ss \n[.ss] 0
.nh
.ad l
.de URL
\fI\\$2\fP <\\$1>\\$3
..
.als MTO URL
.if \n[.g] \{\
.  mso www.tmac
.  am URL
.    ad l
.  .
.  am MTO
.    ad l
.  .
.  LINKSTYLE blue R < >
.\}
.SH "NAME"
androiddump \- Provide interfaces to capture from Android devices
.SH "SYNOPSIS"
.sp
\fBandroiddump\fP
[\~\fB\-\-help\fP\~]
[\~\fB\-\-version\fP\~]
[\~\fB\-\-extcap\-version\fP\~]
[\~\fB\-\-debug\fP\~]
[\~\fB\-\-extcap\-interfaces\fP\~]
[\~\fB\-\-extcap\-dlts\fP\~]
[\~\fB\-\-extcap\-interface\fP=<interface>\~]
[\~\fB\-\-extcap\-config\fP\~]
[\~\fB\-\-extcap\-capture\-filter\fP=<capture\~filter>\~]
[\~\fB\-\-capture\fP\~]
[\~\fB\-\-fifo\fP=<path\~to\~file\~or\~pipe>\~]
[\~\fB\-\-adb\-server\-ip\fP=<IP\~address>\~]
[\~\fB\-\-adb\-server\-tcp\-port\fP=<TCP\~port>\~]
[\~\fB\-\-logcat\-text\fP=<TRUE\~or\~FALSE>\~]
[\~\fB\-\-bt\-server\-tcp\-port\fP=<TCP\~port>\~]
[\~\fB\-\-bt\-forward\-socket\fP=<TRUE\~or\~FALSE>\~]
[\~\fB\-\-bt\-local\-ip\fP=<IP\~address>\~]
[\~\fB\-\-bt\-local\-tcp\-port\fP=<TCP\~port>\~]
.sp
\fBandroiddump\fP
\fB\-\-extcap\-interfaces\fP
[\~\fB\-\-adb\-server\-ip\fP=<IP\~address>\~]
[\~\fB\-\-adb\-server\-tcp\-port\fP=<TCP\~port>\~]
.sp
\fBandroiddump\fP
\fB\-\-extcap\-interface\fP=<interface>
[\~\fB\-\-extcap\-dlts\fP\~]
.sp
\fBandroiddump\fP
\fB\-\-extcap\-interface\fP=<interface>
[\~\fB\-\-extcap\-config\fP\~]
.sp
\fBandroiddump\fP
\fB\-\-extcap\-interface\fP=<interface>
\fB\-\-fifo\fP=<path\~to\~file\~or\~pipe>
\fB\-\-capture\fP
.SH "DESCRIPTION"
.sp
\fBAndroiddump\fP is a extcap tool that provide interfaces to capture from
an Android device. There are only two requirements:
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.  sp -1
.  IP " 1." 4.2
.\}
You must have the Android SDK and add it to your PATH environment variable.
PATH should contain directory with tools like "adb" and "android".
Android SDK for various platform are available on:
.URL "https://developer.android.com/sdk/index.html#Other" "" ""
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.  sp -1
.  IP " 2." 4.2
.\}
You must have permission to capture from the Android device.
Some Android devices require on\-screen authentication.
.RE
.sp
Supported interfaces:
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.  sp -1
.  IP " 1." 4.2
.\}
Logcat Main (binary [<=Jelly Bean] or text)
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.  sp -1
.  IP " 2." 4.2
.\}
Logcat System (binary [<=Jelly Bean] or text)
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.  sp -1
.  IP " 3." 4.2
.\}
Logcat Events (binary [<=Jelly Bean] or text)
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 4.\h'+01'\c
.\}
.el \{\
.  sp -1
.  IP " 4." 4.2
.\}
Logcat Radio (binary [<=Jelly Bean] or text)
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 5.\h'+01'\c
.\}
.el \{\
.  sp -1
.  IP " 5." 4.2
.\}
Logcat Crash (text; from Lollipop)
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 6.\h'+01'\c
.\}
.el \{\
.  sp -1
.  IP " 6." 4.2
.\}
Bluetooth Hcidump [<=Jelly Bean]
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 7.\h'+01'\c
.\}
.el \{\
.  sp -1
.  IP " 7." 4.2
.\}
Bluetooth Bluedroid External Parser [Kitkat]
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 8.\h'+01'\c
.\}
.el \{\
.  sp -1
.  IP " 8." 4.2
.\}
Bluetooth BtsnoopNet [>=Lollipop]
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 9.\h'+01'\c
.\}
.el \{\
.  sp -1
.  IP " 9." 4.2
.\}
WiFi/Ethernet tcpdump [needs tcpdump on phone]
.RE
.sp
Please note that Androiddump will work also for FirefoxOS or other
Android\-based operating systems.
.SH "OPTIONS"
.sp
\-\-help
.RS 4
Print program arguments.
.RE
.sp
\-\-version
.RS 4
Print program version.
.RE
.sp
\-\-extcap\-version
.RS 4
Print extcapized version.
.RE
.sp
\-\-debug
.RS 4
Print additional messages.
.RE
.sp
\-\-extcap\-interfaces
.RS 4
List available interfaces.
.RE
.sp
\-\-extcap\-interface=<interface>
.RS 4
Use specified interfaces.
.RE
.sp
\-\-extcap\-dlts
.RS 4
List DLTs of specified interface.
.RE
.sp
\-\-extcap\-config
.RS 4
List configuration options of specified interface.
.RE
.sp
\-\-extcap\-capture\-filter=<capture filter>
.RS 4
The capture filter. It corresponds to the value provided via the \fBtshark \-f\fP
option, and the Capture Filter field next to the interfaces list in the
Wireshark interface.
.if n .sp
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
.B Note
.ps -1
.br
.sp
This is only respected for Wifi/Ethernet (tcpdump) capturing, not for
Bluetooth or logcat.
.sp .5v
.RE
.RE
.sp
\-\-capture
.RS 4
Start capturing from the specified interface and save it in the location
specified with \-\-fifo.
.RE
.sp
\-\-fifo=<path to file or pipe>
.RS 4
Save captured packet to file or send it through pipe.
.RE
.sp
\-\-adb\-server\-ip=<IP address>
.RS 4
Use other than default (127.0.0.1) ADB daemon\(cqs IP address.
.RE
.sp
\-\-adb\-server\-tcp\-port=<TCP port>
.RS 4
Use other than default (5037) ADB daemon\(cqs TCP port.
.RE
.sp
\-\-logcat\-text=<TRUE or FALSE>
.RS 4
.sp
If TRUE then use text logcat rather then binary. This option only has an
effect on
Logcat interfaces. This have no effect from Lollipop where is no binary Logcat
available.
.sp
Defaults to FALSE.
.RE
.sp
\-\-bt\-server\-tcp\-port=<TCP port>
.RS 4
.sp
Use other than default Bluetooth server TCP port on Android side.
On Lollipop defaults is 8872, earlier 4330.
.RE
.sp
\-\-bt\-forward\-socket=<TRUE or FALSE>
.RS 4
.sp
If TRUE then socket from Android side is forwarded to host side.
.sp
Defaults to FALSE.
.RE
.sp
\-\-bt\-local\-ip=<IP address>
.RS 4
Use other than default (127.0.0.1) IP address on host side for forwarded socket.
.RE
.sp
\-\-bt\-local\-tcp\-port=<TCP port>
.RS 4
Specify port to be used on host side for forwarded socket.
.RE
.SH "EXAMPLES"
.sp
To see program arguments:
.sp
.if n .RS 4
.nf
.fam C
androiddump \-\-help
.fam
.fi
.if n .RE
.sp
To see program version:
.sp
.if n .RS 4
.nf
.fam C
androiddump \-\-version
.fam
.fi
.if n .RE
.sp
To see interfaces:
.sp
.if n .RS 4
.nf
.fam C
androiddump \-\-extcap\-interfaces
.fam
.fi
.if n .RE
.sp
.B Example output
.br
.sp
.if n .RS 4
.nf
.fam C
interface {display=Android Logcat Main unknown MSM7627A}{value=android\-logcat\-main\-MSM7627A}
interface {display=Android Logcat System unknown MSM7627A}{value=android\-logcat\-system\-MSM7627A}
interface {display=Android Logcat Radio unknown MSM7627A}{value=android\-logcat\-radio\-MSM7627A}
interface {display=Android Logcat Events unknown MSM7627A}{value=android\-logcat\-events\-MSM7627A}
interface {display=Android Bluetooth Hcidump unknown MSM7627A}{value=android\-bluetooth\-hcidump\-MSM7627A}
.fam
.fi
.if n .RE
.sp
Human\-readable display name of interfaces contains interface type, one of:
.sp
.if n .RS 4
.nf
.fam C
android\-logcat\-main (Android Logcat Main)
android\-logcat\-system (Android Logcat System)
android\-logcat\-radio (Android Logcat Radio)
android\-logcat\-events (Android Logcat Events)
android\-logcat\-text\-main (Android Logcat Main)
android\-logcat\-text\-system (Android Logcat System)
android\-logcat\-text\-radio (Android Logcat Radio)
android\-logcat\-text\-events (Android Logcat Events)
android\-logcat\-text\-crash (Android Logcat Crash)
android\-bluetooth\-hcidump (Android Bluetooth Hcidump)
android\-bluetooth\-external\-parser (Android Bluetooth External Parser)
android\-bluetooth\-btsnoop\-net (Android Bluetooth Btsnoop Net)
android\-tcpdump (Android tcpdump)
.fam
.fi
.if n .RE
.sp
For tcpdump this is followed by target network device name (like \f(CReth0\fP).
.sp
Then Android Device\(cqs name if available, otherwise \f(CRunknown\fP.
.sp
Last part of it is DeviceID \- the identificator of the device provided by Android SDK (see \f(CRadb devices\fP).
.sp
For example: \f(CRAndroid Logcat Main unknown MSM7627A\fP
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\f(CRAndroid Logcat Main\fP \- user\-friendly type of interface
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\f(CRunknown\fP \- name of Android Device
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\f(CRMSM7627A\fP \- device ID
.RE
.sp
To see interface DLTs:
.sp
.if n .RS 4
.nf
.fam C
androiddump \-\-extcap\-interface=android\-bluetooth\-hcidump\-MSM7627A \-\-extcap\-dlts
.fam
.fi
.if n .RE
.sp
.B Example output
.br
.sp
.if n .RS 4
.nf
.fam C
dlt {number=99}{name=BluetoothH4}{display=Bluetooth HCI UART transport layer plus pseudo\-header}
.fam
.fi
.if n .RE
.sp
To see interface configuration options:
.sp
.if n .RS 4
.nf
.fam C
androiddump \-\-extcap\-interface=android\-bluetooth\-hcidump\-MSM7627A \-\-extcap\-config
.fam
.fi
.if n .RE
.sp
.B Example output
.br
.sp
.if n .RS 4
.nf
.fam C
arg {number=0}{call=\-\-adb\-server\-ip}{display=ADB Server IP Address}{type=string}{default=127.0.0.1}
arg {number=1}{call=\-\-adb\-server\-tcp\-port}{display=ADB Server TCP Port}{type=integer}{range=0,65535}{default=5037}
.fam
.fi
.if n .RE
.sp
To capture:
.sp
.if n .RS 4
.nf
.fam C
androiddump \-\-extcap\-interface=android\-bluetooth\-hcidump\-MSM7627A \-\-fifo=/tmp/bluetooth.pcapng \-\-capture
.fam
.fi
.if n .RE
.if n .sp
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
.B Note
.ps -1
.br
.sp
To stop capturing CTRL+C/kill/terminate the application.
.sp .5v
.RE
.SH "SEE ALSO"
.sp
wireshark(1), tshark(1), dumpcap(1), extcap(4)
.SH "NOTES"
.sp
\fBAndroiddump\fP is part of the \fBWireshark\fP distribution.  The latest version
of \fBWireshark\fP can be found at \c
.URL "https://www.wireshark.org" "" "."
.sp
HTML versions of the Wireshark project man pages are available at
.URL "https://www.wireshark.org/docs/man\-pages" "" "."
.SH "AUTHORS"
.sp
.B Original Author
.br
Michal Labedzki <michal.labedzki[AT]tieto.com>
.sp
.B Contributors
.br
Roland Knall <rknall[AT]gmail.com>