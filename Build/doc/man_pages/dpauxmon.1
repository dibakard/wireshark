'\" t
.\"     Title: dpauxmon
.\"    Author: [see the "AUTHOR(S)" section]
.\" Generator: Asciidoctor 2.0.16
.\"      Date: 2025-04-11
.\"    Manual: \ \&
.\"    Source: \ \&
.\"  Language: English
.\"
.TH "DPAUXMON" "1" "2025-04-11" "\ \&" "\ \&"
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.ss \n[.ss] 0
.nh
.ad l
.de URL
\fI\\$2\fP <\\$1>\\$3
..
.als MTO URL
.if \n[.g] \{\
.  mso www.tmac
.  am URL
.    ad l
.  .
.  am MTO
.    ad l
.  .
.  LINKSTYLE blue R < >
.\}
.SH "NAME"
dpauxmon \- Provide interfaces to capture DisplayPort AUX channel data.
.SH "SYNOPSIS"
.sp
\fBdpauxmon\fP
[\~\fB\-\-help\fP\~]
[\~\fB\-\-version\fP\~]
[\~\fB\-\-extcap\-interfaces\fP\~]
[\~\fB\-\-extcap\-dlts\fP\~]
[\~\fB\-\-extcap\-interface\fP=<interface>\~]
[\~\fB\-\-extcap\-config\fP\~]
[\~\fB\-\-extcap\-capture\-filter\fP=<capture\~filter>\~]
[\~\fB\-\-capture\fP\~]
[\~\fB\-\-fifo\fP=<path\~to\~file\~or\~pipe>\~]
[\~\fB\-\-interface_id\fP=<Interface\~ID\~to\~capture>\~]
.sp
\fBdpauxmon\fP
\fB\-\-extcap\-interfaces\fP
.sp
\fBdpauxmon\fP
\fB\-\-extcap\-interface\fP=<interface>
\fB\-\-extcap\-dlts\fP
.sp
\fBdpauxmon\fP
\fB\-\-extcap\-interface\fP=<interface>
\fB\-\-extcap\-config\fP
.sp
\fBdpauxmon\fP
\fB\-\-extcap\-interface\fP=<interface>
\fB\-\-fifo\fP=<path\~to\~file\~or\~pipe>
\fB\-\-capture\fP
\fB\-\-interface_id=interface_id\fP
.SH "DESCRIPTION"
.sp
\fBdpauxmon\fP is an extcap tool that can capture DisplayPort AUX channel data
from linux kernel drivers using the generic netlink interface.
.sp
Supported interfaces:
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.  sp -1
.  IP " 1." 4.2
.\}
dpauxmon
.RE
.SH "OPTIONS"
.sp
\-\-help
.RS 4
Print program arguments.
.RE
.sp
\-\-version
.RS 4
Print program version.
.RE
.sp
\-\-extcap\-interfaces
.RS 4
List available interfaces.
.RE
.sp
\-\-extcap\-interface=<interface>
.RS 4
Use specified interfaces.
.RE
.sp
\-\-extcap\-dlts
.RS 4
List DLTs of specified interface.
.RE
.sp
\-\-extcap\-config
.RS 4
List configuration options of specified interface.
.RE
.sp
\-\-capture
.RS 4
Start capturing from specified interface and save it in place specified by \-\-fifo.
.RE
.sp
\-\-fifo=<path to file or pipe>
.RS 4
Save captured packet to file or send it through pipe.
.RE
.sp
\-\-interface_idt=<interface id>
.RS 4
The interface for capture.
.RE
.SH "EXAMPLES"
.sp
To see program arguments:
.sp
.if n .RS 4
.nf
.fam C
dpauxmon \-\-help
.fam
.fi
.if n .RE
.sp
To see program version:
.sp
.if n .RS 4
.nf
.fam C
dpauxmon \-\-version
.fam
.fi
.if n .RE
.sp
To see interfaces:
.sp
.if n .RS 4
.nf
.fam C
dpauxmon \-\-extcap\-interfaces
.fam
.fi
.if n .RE
.sp
Only one interface (dpauxmon) is supported.
.sp
.B Example output
.br
.sp
.if n .RS 4
.nf
.fam C
interface {value=dpauxmon}{display=DisplayPort AUX channel capture}
.fam
.fi
.if n .RE
.sp
To see interface DLTs:
.sp
.if n .RS 4
.nf
.fam C
dpauxmon \-\-extcap\-interface=dpauxmon \-\-extcap\-dlts
.fam
.fi
.if n .RE
.sp
.B Example output
.br
.sp
.if n .RS 4
.nf
.fam C
dlt {number=275}{name=dpauxmon}{display=DisplayPort AUX channel monitor DLT}
.fam
.fi
.if n .RE
.sp
To see interface configuration options:
.sp
.if n .RS 4
.nf
.fam C
dpauxmon \-\-extcap\-interface=dpauxmon \-\-extcap\-config
.fam
.fi
.if n .RE
.sp
.B Example output
.br
.sp
.if n .RS 4
.nf
.fam C
dpauxmon \-\-extcap\-interface=dpauxmon \-\-extcap\-config
arg {number=0}{call=\-\-interface_id}{display=Interface Id}
    {type=unsigned}{tooltip=The Interface Id}
    {required=true}
.fam
.fi
.if n .RE
.sp
To capture:
.sp
.if n .RS 4
.nf
.fam C
dpauxmon \-\-extcap\-interface=dpauxmon \-\-fifo=/tmp/dpauxmon.pcap \-\-capture \-\-interface_id 0
.fam
.fi
.if n .RE
.SH "SEE ALSO"
.sp
wireshark(1), tshark(1), dumpcap(1), extcap(4)
.SH "NOTES"
.sp
\fBdpauxmon\fP is part of the \fBWireshark\fP distribution.  The latest version
of \fBWireshark\fP can be found at \c
.URL "https://www.wireshark.org" "" "."
.sp
HTML versions of the Wireshark project man pages are available at
.URL "https://www.wireshark.org/docs/man\-pages" "" "."
.SH "AUTHORS"
.sp
.B Original Author
.br
Dirk Eibach <dirk.eibach[AT]gdsys.cc>