'\" t
.\"     Title: randpktdump
.\"    Author: [see the "AUTHOR(S)" section]
.\" Generator: Asciidoctor 2.0.16
.\"      Date: 2025-04-11
.\"    Manual: \ \&
.\"    Source: \ \&
.\"  Language: English
.\"
.TH "RANDPKTDUMP" "1" "2025-04-11" "\ \&" "\ \&"
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.ss \n[.ss] 0
.nh
.ad l
.de URL
\fI\\$2\fP <\\$1>\\$3
..
.als MTO URL
.if \n[.g] \{\
.  mso www.tmac
.  am URL
.    ad l
.  .
.  am MTO
.    ad l
.  .
.  LINKSTYLE blue R < >
.\}
.SH "NAME"
randpktdump \- Provide an interface to generate random captures using randpkt
.SH "SYNOPSIS"
.sp
\fBrandpktdump\fP
[\~\fB\-\-help\fP\~]
[\~\fB\-\-version\fP\~]
[\~\fB\-\-extcap\-interfaces\fP\~]
[\~\fB\-\-extcap\-dlts\fP\~]
[\~\fB\-\-extcap\-interface\fP=<interface>\~]
[\~\fB\-\-extcap\-config\fP\~]
[\~\fB\-\-capture\fP\~]
[\~\fB\-\-fifo\fP=<path\~to\~file\~or\~pipe>\~]
[\~\fB\-\-maxbytes\fP=<bytes>\~]
[\~\fB\-\-count\fP=<num>\~]
[\~\fB\-\-delay\fP=<ms>\~]
[\~\fB\-\-random\-type\fP=<true|false>\~]
[\~\fB\-\-all\-random\fP=<true|false>\~]
[\~\fB\-\-type\fP=<packet\~type>\~]
.SH "DESCRIPTION"
.sp
\fBrandpktdump\fP is a extcap tool that provides access to the random
packet generator (randpkt). It is mainly used for testing and
educational purpose.
.SH "OPTIONS"
.sp
\-\-help
.RS 4
Print program arguments.
.RE
.sp
\-\-version
.RS 4
Print program version.
.RE
.sp
\-\-extcap\-interfaces
.RS 4
List available interfaces.
.RE
.sp
\-\-extcap\-interface=<interface>
.RS 4
Use specified interfaces.
.RE
.sp
\-\-extcap\-dlts
.RS 4
List DLTs of specified interface.
.RE
.sp
\-\-extcap\-config
.RS 4
List configuration options of specified interface.
.RE
.sp
\-\-capture
.RS 4
Start capturing from specified interface save saved it in place specified by \-\-fifo.
.RE
.sp
\-\-fifo=<path to file or pipe>
.RS 4
Save captured packet to file or send it through pipe.
.RE
.sp
\-\-maxbytes=<bytes>
.RS 4
Set the max number of bytes per packet.
.RE
.sp
\-\-count=<num>
.RS 4
Number of packets to generate (\-1 for infinite).
.RE
.sp
\-\-delay=<ms>
.RS 4
Wait a number of milliseconds after writing each packet.
.RE
.sp
\-\-random\-type
.RS 4
Choose a random packet type for all packets if set to true.
.RE
.sp
\-\-all\-random
.RS 4
Choose a different random packet type for each packet if set to true.
.RE
.sp
\-\-type=<packet type>
.RS 4
Use the selected packet type. To list all the available packet type, run randpktdump \-\-help.
.RE
.SH "EXAMPLES"
.sp
To see program arguments:
.sp
.if n .RS 4
.nf
.fam C
randpktdump \-\-help
.fam
.fi
.if n .RE
.sp
To see program version:
.sp
.if n .RS 4
.nf
.fam C
randpktdump \-\-version
.fam
.fi
.if n .RE
.sp
To see interfaces:
.sp
.if n .RS 4
.nf
.fam C
randpktdump \-\-extcap\-interfaces
.fam
.fi
.if n .RE
.sp
.B Example output
.br
.sp
.if n .RS 4
.nf
.fam C
interface {value=randpkt}{display=Random packet generator}
.fam
.fi
.if n .RE
.sp
To see interface DLTs:
.sp
.if n .RS 4
.nf
.fam C
randpktdump \-\-extcap\-interface=randpkt \-\-extcap\-dlts
.fam
.fi
.if n .RE
.sp
.B Example output
.br
.sp
.if n .RS 4
.nf
.fam C
dlt {number=1}{name=randpkt}{display=Ethernet}
.fam
.fi
.if n .RE
.sp
To see interface configuration options:
.sp
.if n .RS 4
.nf
.fam C
randpktdump \-\-extcap\-interface=randpkt \-\-extcap\-config
.fam
.fi
.if n .RE
.sp
.B Example output
.br
.sp
.if n .RS 4
.nf
.fam C
arg {number=0}{call=\-\-maxbytes}{display=Max bytes in a packet}{type=unsigned}{range=1,5000}{default=5000}{tooltip=The max number of bytes in a packet}
arg {number=1}{call=\-\-count}{display=Number of packets}{type=long}{default=1000}{tooltip=Number of packets to generate (\-1 for infinite)}
arg {number=2}{call=\-\-delay}{display=Packet delay (ms)}{type=long}{default=0}{tooltip=Milliseconds to wait after writing each packet}
arg {number=3}{call=\-\-random\-type}{display=Random type}{type=boolflag}{default=false}{tooltip=The packets type is randomly chosen}
arg {number=4}{call=\-\-all\-random}{display=All random packets}{type=boolflag}{default=false}{tooltip=Packet type for each packet is randomly chosen}
arg {number=5}{call=\-\-type}{display=Type of packet}{type=selector}{tooltip=Type of packet to generate}
value {arg=5}{value=arp}{display=Address Resolution Protocol}
[...]
value {arg=5}{value=usb\-linux}{display=Universal Serial Bus with Linux specific header}
.fam
.fi
.if n .RE
.sp
To capture:
.sp
.if n .RS 4
.nf
.fam C
randpktdump \-\-extcap\-interface=randpkt \-\-fifo=/tmp/randpkt.pcapng \-\-capture
.fam
.fi
.if n .RE
.if n .sp
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
.B Note
.ps -1
.br
.sp
To stop capturing CTRL+C/kill/terminate the application.
.sp .5v
.RE
.SH "SEE ALSO"
.sp
wireshark(1), tshark(1), dumpcap(1), extcap(4), randpkt(1)
.SH "NOTES"
.sp
\fBrandpktdump\fP is part of the \fBWireshark\fP distribution.  The latest version
of \fBWireshark\fP can be found at \c
.URL "https://www.wireshark.org" "" "."
.sp
HTML versions of the Wireshark project man pages are available at
.URL "https://www.wireshark.org/docs/man\-pages" "" "."
.SH "AUTHORS"
.sp
.B Original Author
.br
Dario Lombardo <lomato[AT]gmail.com>